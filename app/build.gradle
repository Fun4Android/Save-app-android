apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from : '../dependencies.gradle'
apply from : '../config.gradle'
apply plugin: 'org.jetbrains.kotlin.android'

def getDropboxKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("dropbox_key")
}

android {
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    signingConfigs {
    }

    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        applicationId "net.opendasharchive.openarchive"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        archivesBaseName = "OpenArchive-$versionName"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    flavorDimensions "free"
    buildTypes {
        debug {
            buildConfigField "String", "dropbox_key", getDropboxKey()
            resValue 'string', "dropbox_key", getDropboxKey()
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "dropbox_key", getDropboxKey()
            resValue 'string', "dropbox_key", getDropboxKey()
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE.txt', 'META-INF/NOTICE.txt', 'META-INF/LICENSE', 'META-INF/NOTICE', 'META-INF/DEPENDENCIES', 'LICENSE.txt']
        }
    }
    productFlavors {
        releaseflavor {
            applicationId 'net.opendasharchive.openarchive.release'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
    lint {
        abortOnError false
    }

    namespace 'net.opendasharchive.openarchive'
}

dependencies {

    implementation libraries.kotlin_stdlib
    implementation libraries.core_ktx
    implementation libraries.android_image_picker
    implementation libraries.coroutines
    implementation libraries.gson
    //noinspection GradleCompatible
    implementation libraries.okhttp
   // implementation libraries.okio

    implementation libraries.satyan_sugar
    implementation libraries.i2p_floating_action
    implementation libraries.amulyakhare_textdrawable
    implementation libraries.appintro
    implementation libraries.picasso

    implementation libraries.cleaninsights_android_sdk
    implementation libraries.audio_waveform
    implementation libraries.fresco
    implementation libraries.frescoimageviewer

    implementation libraries.circular_imageview
    implementation libraries.netcipher

    //from here: https://github.com/guardianproject/proofmode
    implementation (libraries.android_libproofmode) {

        transitive = false

        exclude group: 'org.bitcoinj'
        exclude group: 'com.google.protobuf'
        exclude group: 'org.slf4j'
        exclude group: 'net.jcip'
        exclude group: 'commons-cli'
        exclude group: 'org.json'
        exclude group: 'com.google.guava'
        exclude group: 'com.google.guava', module: 'guava-jdk5'
        exclude group: 'com.google.code.findbugs', module: 'annotations'
        exclude group: "com.squareup.okio", module: "okio"
    }

    //  implementation 'com.github.WrathChaos:MediaPickerLib:0.1.4'

    //adding web dav support: https://github.com/thegrizzlylabs/sardine-android'
    implementation libraries.sardine_android

    //header recyclerview
    implementation libraries.sectioned_recyclerview_adapter

    implementation group: 'androidx.preference', name: 'preference-ktx', version: '1.2.0'

    implementation libraries.appcompat
    implementation libraries.constraint_layout
    implementation libraries.material

    implementation libraries.dropbox_core_sdk
    implementation libraries.legacy_support_v4
    implementation libraries.coordinator_layout

    //user prompts
    implementation libraries.cafebar

    //alerter
    implementation libraries.alerter

    //glide
    implementation libraries.glide
    implementation 'com.google.android.gms:play-services-basement:18.2.0'
    implementation 'com.google.android.gms:play-services-base:18.2.0'
    annotationProcessor libraries.glideAnnotate

    implementation "androidx.work:work-runtime-ktx:2.8.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0"

    implementation libraries.guava
    implementation libraries.sheetsInfo

    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    implementation 'org.bouncycastle:bcpkix-jdk15to18:1.71'
    implementation 'org.bouncycastle:bcprov-jdk15to18:1.71'
    api 'org.bouncycastle:bcpg-jdk15to18:1.71'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.guolindev.permissionx:permissionx:1.6.4'

    // Tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.7.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:runner:1.5.2'
}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

/**
 testdroid {username '$bbusername'
 password '$bbpassword'
 deviceGroup 'gpdevices'
 mode "FULL_RUN"
 projectName "OASave"}**/

